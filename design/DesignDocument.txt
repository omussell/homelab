- Produced in Markdown with Vim, converted to HTML by Pandoc.
- Graphics created with DOT
- Hosted on Github Pages

Bootstrapping a Secure Infrastructure
===

Summary
---

Create an infrastructure with an emphasis on security, resiliency and ease of 
maintenance. 

End Goal
---

Produce a working implementation of a secure, resilient and easy to maintain infrastructure. This will be published in the form of version-controlled configuration documents, with the philosophy and background of the chosen configuration documented here. Anyone should be able to download the vendor supplied base operating system, and the configuration documents should convert that base OS into the desired state. The process by which this conversion is achieved could be as simple as a shell script, or as complicated as a configuration management tool backed by continuous deployment pipelines. In addition, the infrastructure should be flexible enough to be deployed in multiple configurations based on the decisions of the Infrastructure Architects and business owners. It should also be portable to other operating systems with only a little massage of the configuration code.

Background
---

The design of the environment will be similar to the MIT Athena project and the 
Distributed Computing Environment by the OSF. Inspiration for this project comes from the infrastructures.org website, specifically their papers: "Bootstrapping an Infrastructure" and "Why Order Matters: Turing Equivalence in Automated Systems Administration".

This project aims to extend the work of infrastructures.org, by emphasising security and producing a working implementation that can be used by anyone.

The implementation can take multiple forms. The envisioned configuration is a closed network, that is, sites are connected using secure tunnels over the insecure internet where each site is independent of the others.

Decentralised - Each site is independent and can function without a connection to the internet. 
Headquarters - Main site(s), connected to other sites

In any of these scenarios, the administrators can provide end-users with access to the network in multiple ways:
Thick client
Thin client
BYOD
Web access only


In addition, a "server" can take many forms, it could be a Jail/Zone/Container, virtual machine, physical or cloud.

Also, while the envisioned configuration is a closed network, where nothing is accessible via the normal internet, there is no requirement for this to be so. If you want end-users to be able to access your network from home or via BYOD they can.

The end result should be that any 
computer should be able to connect to the environment, after all, the 
environment is there to provide a substrate for the enterprise to do its job.
This means that users can use their own devices to connect, or for large enterprises a thin client could be used

High-Level Design
---

- Control Machine
- Primary/Secondary
- Data Storage
- Clients
!(/homelab/pic/secenv.svg)

Detailed Design
---
Gold Server Design
Router Design
Firewall Design
Load Balancer and Traffic Management Design
Frontend Web Design
App server Design
Data Storage Design
